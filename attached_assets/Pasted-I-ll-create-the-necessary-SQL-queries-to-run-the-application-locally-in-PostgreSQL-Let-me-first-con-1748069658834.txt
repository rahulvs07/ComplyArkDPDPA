I'll create the necessary SQL queries to run the application locally in PostgreSQL. Let me first continue checking the schema to understand all the tables in our database:


Opened shared/schema.ts
Let me create the SQL queries required to set up your application database. I'll prepare everything needed for the ComplyArk application to run locally:


Created scripts/setup-local-db.sql
I'll now create a Node.js script to run these SQL queries. This will help you set up your local database with all the needed data:


Created scripts/run-local-setup.js
Now I've created two key files that will help you set up and run the ComplyArk application locally with PostgreSQL:

scripts/setup-local-db.sql - A comprehensive SQL script containing all the queries needed to set up your database with:

Core tables for industries, organizations, users, templates, notices, translated notices
Status workflow tables for the request management
Data Principal Request (DPR) and grievance tables
Compliance document and notification log tables
Sample data including a default organization, admin user, regular user, templates, and sample requests
scripts/run-local-setup.js - A Node.js script that connects to your PostgreSQL database and executes all the SQL queries automatically.

To use these files and set up your local database:

First, ensure your PostgreSQL database is running and you have the correct database connection string in your environment variables (DATABASE_URL).

Install the required dependencies if you haven't already:

npm install dotenv @neondatabase/serverless
Run the setup script:

node scripts/run-local-setup.js
When complete, you'll be able to log in with:

Admin: complyarkadmin / complyarkadmin
User: user / password
The setup includes a beautiful fluid-animated login page with the "Simplifying Data Protection Compliance" tagline as you requested, and prepopulates your database with sample data to demonstrate all the key modules:

DPR module with a sample access request
Grievance module with a sample complaint
Notice module with a default privacy notice
Compliance documentation repository with a sample document
Notification logs with relevant activity records
All these features are connected to the same status workflow system, so you can track request progress consistently across modules. Would you like me to explain any specific part of the setup in more detail?